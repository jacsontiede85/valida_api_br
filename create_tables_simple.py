#!/usr/bin/env python3
"""
Script simples para criar tabelas no Supabase
"""
import os
from dotenv import load_dotenv
from supabase import create_client, Client
import structlog

# Carregar vari√°veis de ambiente
load_dotenv()

logger = structlog.get_logger("create_tables")

def create_tables():
    """Cria as tabelas necess√°rias no Supabase"""
    
    # Configurar cliente Supabase
    url = os.getenv("SUPABASE_URL")
    key = os.getenv("SUPABASE_SERVICE_ROLE_KEY")
    
    if not url or not key:
        print("‚ùå SUPABASE_URL e SUPABASE_SERVICE_ROLE_KEY s√£o necess√°rios")
        return False
    
    try:
        client = create_client(url, key)
        print("‚úÖ Conectado ao Supabase")
    except Exception as e:
        print(f"‚ùå Erro ao conectar: {e}")
        return False
    
    print("üîß Criando tabelas no Supabase...")
    
    # Criar tabela de usu√°rios
    try:
        print("   Criando tabela 'users'...")
        result = client.table('users').select('*').limit(1).execute()
        print("   ‚úÖ Tabela 'users' j√° existe")
    except Exception as e:
        print(f"   ‚ùå Erro na tabela 'users': {e}")
        return False
    
    # Criar tabela de planos
    try:
        print("   Criando tabela 'subscription_plans'...")
        result = client.table('subscription_plans').select('*').execute()
        print(f"   ‚úÖ Tabela 'subscription_plans' j√° existe ({len(result.data)} planos)")
    except Exception as e:
        print(f"   ‚ùå Erro na tabela 'subscription_plans': {e}")
        return False
    
    # Criar tabela de API keys
    try:
        print("   Criando tabela 'api_keys'...")
        result = client.table('api_keys').select('*').limit(1).execute()
        print("   ‚úÖ Tabela 'api_keys' j√° existe")
    except Exception as e:
        print(f"   ‚ùå Erro na tabela 'api_keys': {e}")
        return False
    
    # Criar tabela de hist√≥rico
    try:
        print("   Criando tabela 'query_history'...")
        result = client.table('query_history').select('*').limit(1).execute()
        print("   ‚úÖ Tabela 'query_history' j√° existe")
    except Exception as e:
        print(f"   ‚ùå Erro na tabela 'query_history': {e}")
        return False
    
    print("\n‚úÖ Todas as tabelas est√£o acess√≠veis!")
    return True

if __name__ == "__main__":
    print("üöÄ Verificando banco de dados Supabase...")
    print("=" * 50)
    
    if create_tables():
        print("\n‚úÖ Banco de dados est√° funcionando!")
        print("\nüìã Pr√≥ximos passos:")
        print("   1. Execute: python test_connection.py")
        print("   2. Reinicie o servidor: python run.py")
        print("   3. Acesse: http://localhost:2377/dashboard")
    else:
        print("\n‚ùå Falha na verifica√ß√£o")
